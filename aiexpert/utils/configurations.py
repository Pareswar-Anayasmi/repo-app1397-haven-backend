from decouple import config as env_config
import logging

ALLOWED_ORIGINS = env_config("ALLOWED_ORIGINS", "")

AUTHEN_HEADER_NAME = env_config("AUTHEN_HEADER_NAME", "Authorization")

AUTHEN_OIDC_BASE_URL = env_config("AUTHEN_OIDC_BASE_URL", "")
AUTHEN_OIDC_AUDIENCE = env_config("AUTHEN_OIDC_AUDIENCE", None)
AUTHEN_OIDC_ISSUER = env_config("AUTHEN_OIDC_ISSUER", AUTHEN_OIDC_BASE_URL)
AUTHEN_OIDC_ISSUER_FOR_SERVICE_ACCOUNT = env_config("AUTHEN_OIDC_ISSUER_FOR_SERVICE_ACCOUNT", "")
AUTHEN_OIDC_JWKS_URL = env_config("AUTHEN_OIDC_JWKS_URL", AUTHEN_OIDC_BASE_URL + env_config("AUTHEN_OIDC_JWKS_PATH", "/v1/keys"))
AUTHEN_OIDC_CLIENT_ID = env_config("AUTHEN_OIDC_CLIENT_ID", None)
AUTHEN_OIDC_CLIENT_SECRET = env_config("AUTHEN_OIDC_CLIENT_SECRET", None)
AUTHEN_OIDC_TOKEN_ENDPOINT = env_config("AUTHEN_OIDC_TOKEN_ENDPOINT", AUTHEN_OIDC_BASE_URL + env_config("AUTHEN_OIDC_TOKEN_PATH", ""))
AUTHEN_OIDC_REDIRECT_URI = env_config("AUTHEN_OIDC_REDIRECT_URI", None)
AUTHEN_OIDC_LOGIN_URL = env_config("AUTHEN_OIDC_LOGIN_URL", AUTHEN_OIDC_BASE_URL + env_config("AUTHEN_OIDC_LOGIN_PATH", ""))

DB_DB_NAME = env_config('DB_DB_NAME', None)
DB_HOST = env_config('DB_HOST', None)
DB_POOL_SIZE = env_config("DB_POOL_SIZE", cast=int, default=5)
DB_PORT = env_config('DB_PORT',5432)
DB_USER = env_config('DB_USER', None)
DB_TOKEN_AUTHEN = env_config("DB_TOKEN_AUTHEN", default=True, cast=bool)
DB_PASSWORD = env_config("DB_PASSWORD", None)

DEFAULT_LOG_LEVEL = env_config("DEFAULT_LOG_LEVEL", logging.ERROR)

LOGGING_AZURE_MONITOR = env_config("LOGGING_AZURE_MONITOR", cast=bool, default=False)


REQUIRE_AUTHEN = env_config("REQUIRE_AUTHEN", True, cast=bool)
MOCK_USER_ID = env_config("MOCK_USER_ID", "mock_user_id")
MOCK_USER_EMAIL = env_config("MOCK_USER_EMAIL", "")
MOCK_USER_GROUPS = env_config("MOCK_USER_GROUPS", default="").replace(" ", "").split(",")
MOCK_USER_GIVEN_NAME = env_config("MOCK_USER_GIVEN_NAME", "Mock")
MOCK_USER_FAMILY_NAME = env_config("MOCK_USER_FAMILY_NAME", "User")

AZURE_IDENTITY_REFRESH_TOKEN_INTERVAL_IN_MINS = env_config("AZURE_IDENTITY_REFRESH_TOKEN_INTERVAL_IN_MINS", cast=int, default=10)


# DIAM service account token default expiration time is 24 hours. Force refresh token every 6 hours.
DIAM_REFRESH_TOKEN_INTERVAL_IN_MINS = env_config("DIAM_REFRESH_TOKEN_INTERVAL_IN_MINS", cast=int, default=360)

ROLE_ADMIN = env_config("ROLE_ADMIN", "admin")
ROLE_USER = env_config("ROLE_USER", "user")

PENDING_USER_STATUS = env_config("PENDING_USER_STATUS", "PENDING")
CONFIRMED_USER_STATUS = env_config("CONFIRMED_USER_STATUS", "CONFIRMED")

SESSION_COOKIE_ENCRYPTION_KEY = env_config("SESSION_COOKIE_ENCRYPTION_KEY", None)
SESSION_COOKIE_FOR_DEVELOPMENT = env_config("SESSION_COOKIE_FOR_DEVELOPMENT", False, cast=bool)
SESSION_COOKIE_DOMAIN = env_config("SESSION_COOKIE_DOMAIN", None)

AUTHEN_TOKEN_ENCRYPTION_KEY = env_config("AUTHEN_TOKEN_ENCRYPTION_KEY", None)

FRONTEND_URL = env_config("FRONTEND_URL", None)
FRONTEND_LANDING_PATH = env_config("FRONTEND_LANDING_PATH", "/landing")

SYSTEM_GROUP_ID = env_config("SYSTEM_GROUP_ID", None)

DIAM_SERVICE_ACCOUNT_CLIENT_ID = env_config("DIAM_SERVICE_ACCOUNT_CLIENT_ID", None)
DIAM_SERVICE_ACCOUNT_CLIENT_SECRET = env_config("DIAM_SERVICE_ACCOUNT_CLIENT_SECRET", None)
DIAM_API_ENDPOINT_BASE_URL = env_config("DIAM_API_ENDPOINT_BASE_URL", AUTHEN_OIDC_BASE_URL + env_config("DIAM_API_ENDPOINT_PATH", ""))

HIDE_EXCEPTION_MESSAGE = env_config("HIDE_EXCEPTION_MESSAGE", True, cast=bool)

IT_ADMIN_GROUP_MIDDLE_NAME = env_config("IT_ADMIN_GROUP_MIDDLE_NAME", SYSTEM_GROUP_ID)

IT_ADMIN_GROUP_NAME = f"{SYSTEM_GROUP_ID}:{IT_ADMIN_GROUP_MIDDLE_NAME}:{ROLE_ADMIN}"
