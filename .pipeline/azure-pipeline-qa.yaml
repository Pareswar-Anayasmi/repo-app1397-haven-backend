trigger:
  branches:
    include:
    - releases/qa-*

resources:
- repo: self

variables:
  # tag: 'v0.0.1'
  imageName: 'ai-expert-assistant/backend'
  # tag: 'v0.0.1-$(Build.BuildId)'

stages:
- stage: BuildAndPush
  displayName: Build and Push Docker Image
  jobs:
  - job: BuildAndPushJob
    displayName: Build and Push Docker Image Job
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        latestTag=$(git tag --list | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | uniq | tail -n 1)-$(Build.BuildId)
        echo "latest tag is $latestTag"
        echo "##vso[task.setvariable variable=latestTag;isOutput=true]$latestTag"
      displayName: Get Latest Tag
      name: SetLatestTag
    - task: Docker@2
      inputs:
        containerRegistry: 'scon-app1397-haven-legal-acr-dev'
        repository: $(imageName)
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(SetLatestTag.latestTag)

- stage: ApprovalGate
  displayName: Approval Gate
  dependsOn: BuildAndPush
  jobs:
  - job: waitForValidation
    displayName: Wait for external validation
    pool: server
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: |
          
        approvers: |
          
        instructions: 'Please validate the build configuration and resume'
        onTimeout: 'reject'

- stage: DeployToQA
  displayName: Deploy to QA
  dependsOn: 
  - BuildAndPush
  - ApprovalGate
  variables:
    latestTag: $[ stageDependencies.BuildAndPush.BuildAndPushJob.outputs['SetLatestTag.latestTag'] ]
  pool:
    name: OpenshiftQA
  jobs:
  - job: DeployQAJob
    displayName: Deploy to QA Job
    steps:
    - script: |
        sed -i 's|cr00cfaroregistry.azurecr.io/ai-expert-assistant/backend:.*|cr00cfaroregistry.azurecr.io/ai-expert-assistant/backend:$(latestTag)|' $(Build.SourcesDirectory)/manifests/qa/deploy.yaml
      displayName: Update Deployment manifest Image Tag
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'scon-app1397-aiexpertassistantqa-aro-qa'
        namespace: 'aiexpertassistantqa'
        command: 'apply'
        useConfigurationFile: true
        configuration: '$(Build.SourcesDirectory)/manifests/qa'
        configurationType: 'configuration'
        arguments: '--validate=false'

